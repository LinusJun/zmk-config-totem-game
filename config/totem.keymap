//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>

#define Base        0
#define Media       1
#define Nav         2
#define Mouse       3
#define Sym         4
#define Num         5
#define Fun         6
#define Button      7
#define Game        8
#define Gameplus    9

&mt {
    quick-tap-ms = <100>;
    global-quick-tap;
    flavor = "tap-preferred";
    tapping-term-ms = <170>;
};

&lt {
    tapping-term-ms = <240>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <400>;
            quick-tap-ms = <125>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;

            require-prior-idle-ms = <200>;
        };
    };

    combos {
        compatible = "zmk,combos";

        LParentheses {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <3 4>;
        };

        LBracket {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <13 14>;
        };

        LBrace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <24 25>;
        };

        RParenthesis {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <5 6>;
        };

        RBracket {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <15 16>;
        };

        RBrace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <26 27>;
        };

        LCopy {
            bindings = <&kp LC(C)>;
            key-positions = <32 33>;
        };

        LPaste {
            bindings = <&kp LC(V)>;
            key-positions = <33 34>;
        };

        LCp {
            bindings = <&kp LC(C)>;
            key-positions = <2 3>;
        };

        LPst {
            bindings = <&kp LC(V)>;
            key-positions = <23 24>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            label = "Base";
            bindings = <
            &kp Q       &kp W       &kp E        &kp R         &kp T              &kp Y           &kp U        &kp I        &kp O       &kp P
            &hm LGUI A  &hm LALT S  &hm LCTRL D  &hm LSHIFT F  &kp G              &kp H           &hm RSHFT J  &hm RCTRL K  &hm RALT L  &hm RGUI SEMICOLON
&lt 3 CAPS  &kp Z       &kp X       &kp C        &kp V         &kp B              &kp N           &kp M        &kp COMMA    &kp DOT     &kp SLASH           &lt 4 APOSTROPHE
                                    &lt 7 ESC    &lt 1 TAB     &mt LCTRL SPACE    &mt LSHIFT RET  &lt 2 BSPC   &lt 7 ESC
            >;
        };

        Nav {
            label = "Nav";
            bindings = <
              &kp F1      &kp HOME     &kp UP_ARROW  &kp END    &kp LG(TAB)    &kp KP_PLUS      &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp KP_MINUS
              &kp F2      &kp LEFT     &kp DOWN      &kp RIGHT  &kp LA(TAB)    &kp KP_MULTIPLY  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp KP_DIVIDE
&kp LEFT_ALT  &kp LSHIFT  &kp PAGE_UP  &kp LG(D)     &kp PG_DN  &kp DEL        &kp BSPC         &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp EQUAL      &trans
                                       &trans        &trans     &trans         &trans           &kp NUMBER_0  &kp DOT
            >;
        };

        Sym {
            label = "Sym";
            bindings = <
          &kp EXCL      &kp AT        &kp HASH          &kp DOLLAR            &kp PERCENT       &kp CARET        &kp AMPERSAND          &kp KP_ASTERISK    &kp UNDER      &kp GRAVE
          &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3      &kp NUMBER_4          &kp NUMBER_5      &kp NUMBER_6     &kp NUMBER_7           &kp NUMBER_8       &kp NUMBER_9   &kp NUMBER_0
&kp LWIN  &kp CARET     &kp PIPE      &kp LEFT_BRACKET  &kp LEFT_PARENTHESIS  &kp LEFT_BRACE    &kp RIGHT_BRACE  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACKET  &kp BACKSLASH  &kp TILDE     &trans
                                      &kp DEL           &trans                &trans            &trans           &trans                 &trans
            >;
        };

        Fun {
            label = "Fun";
            bindings = <
        &bt BT_CLR_ALL  &trans  &out OUT_USB  &bt BT_SEL 0  &to 9     &trans  &trans  &trans  &trans  &kp F1
        &trans          &trans  &out OUT_TOG  &bt BT_SEL 1  &to 5     &trans  &trans  &trans  &trans  &kp F10
&trans  &trans          &trans  &out OUT_BLE  &bt BT_SEL 2  &to 8     &to 8   &trans  &trans  &trans  &kp F20  &trans
                                &trans        &trans        &trans    &trans  &trans  &trans
            >;
        };

        Button {
            label = "Button";
            bindings = <
             &bt BT_CLR  &trans    &trans     &bt BT_SEL 3  &bt BT_SEL 0    &trans      &trans            &trans      &bootloader  &trans
             &kp LGUI    &kp LALT  &kp LCTRL  &kp LSHIFT    &bt BT_SEL 1    &trans      &kp RSHIFT        &kp RCTRL   &kp RALT     &kp RGUI
&bootloader  &trans      &trans    &trans     &bt BT_SEL 4  &bt BT_SEL 2    &trans      &trans            &trans      &trans       &trans    &trans
                                   &trans     &trans        &trans          &kp C_PREV  &kp C_PLAY_PAUSE  &kp C_NEXT
            >;
        };

        Gaming {
            bindings = <
         &kp NUMBER_4  &kp Q  &kp W  &kp E      &kp NUMBER_2    &kp F1  &kp F2  &kp F3  &kp F4  &kp LC(LA(DELETE))
         &kp NUMBER_3  &kp A  &kp S  &kp D      &mo 6           &kp F5  &trans  &trans  &trans  &kp LC(LS(ESC))
&kp TAB  &kp X         &kp R  &kp V  &kp G      &kp NUMBER_1    &trans  &trans  &trans  &trans  &trans              &kp LA(F4)
                              &kp Z  &kp SPACE  &kp F           &trans  &trans  &trans
            >;

            label = "Gaming";
        };

        Gaming+ {
            bindings = <
        &kp F1   &kp F2  &kp F3   &kp F4  &trans    &trans  &trans  &trans  &trans  &kp LC(RA(DEL))
        &kp TAB  &kp X   &kp Z    &kp D   &trans    &kp F5  &trans  &trans  &trans  &trans
&trans  &to 0    &kp T   &kp H    &kp C   &trans    &trans  &trans  &trans  &trans  &trans           &kp LA(F4)
                         &kp ESC  &kp I   &kp M     &trans  &trans  &trans
            >;

            label = "Gaming+";
        };

        FField {
            bindings = <
        &trans  &msc MOVE_UP    &mmv MOVE_UP    &msc MOVE_DOWN   &mkp MB1    &trans  &mkp MB4        &msc MOVE_UP    &mkp MB5         &kp F10
        &trans  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &mkp MB2    &trans  &mkp MB1        &mkp MB3        &mkp MB2         &kp F11
&trans  &trans  &msc MOVE_LEFT  &msc MOVE_DOWN  &msc MOVE_RIGHT  &mkp MB3    &trans  &msc MOVE_LEFT  &msc MOVE_DOWN  &msc MOVE_RIGHT  &kp F12  &kp LALT
                                &trans          &trans           &trans      &trans  &trans          &trans
            >;
        };

        NumpadR {
            bindings = <
        &trans  &trans  &trans  &trans  &trans    &kp KP_PLUS      &kp N7        &kp NUMBER_8  &kp NUMBER_9  &kp KP_MINUS
        &trans  &trans  &trans  &trans  &trans    &kp KP_MULTIPLY  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp KP_DIVIDE
&trans  &to 0   &trans  &trans  &trans  &trans    &kp BACKSPACE    &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans         &to 0
                        &trans  &trans  &trans    &kp ENTER        &kp NUMBER_0  &kp DOT
            >;
        };

        GameJoystickL {
            bindings = <
         &kp ESC  &kp Q  &kp G      &kp E         &kp NUMBER_2    &kp F1      &kp F2         &kp F3       &kp F4  &kp LA(F4)
         &kp R    &kp Z  &kp SPACE  &kp F         &kp NUMBER_3    &kp T       &kp F5         &trans       &trans  &kp LC(LS(ESC))
&kp TAB  &kp X    &kp M  &kp V      &kp I         &kp NUMBER_1    &kp Y       &trans         &trans       &trans  &kp LG(D)        &to 0
                         &kp H      &kp NUMBER_4  &to 0           &kp RETURN  &kp BACKSPACE  &kp LA(TAB)
            >;
        };
    };
};
